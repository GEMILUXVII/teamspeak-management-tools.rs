name: Build Releases

on:
  push:

  workflow_dispatch:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        job:
          - os: macos-latest
          - os: ubuntu-latest
          - os: windows-latest

    name: Build
    runs-on: ${{ matrix.job.os }}
    env:
      RUST_BACKTRACE: full

    steps:
      - uses: actions/checkout@v4

      #- name: Environment
      #  run: |
      #    git submodule update --init --recursive
      - name: Determine Binary Name
        id: determine-os
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            BINARY=teamspeak-management-tools_linux_amd64
          elif [ "$RUNNER_OS" == "Windows" ]; then
            BINARY=teamspeak-management-tools_windows_amd64.exe
          else # macOS
            BINARY=teamspeak-management-tools_darwin_arm64
          fi
          echo "binary_name=$BINARY" >> $GITHUB_OUTPUT

      - name: Cache Cargo packages
        id: cache-cargo
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-cargo
          path: |
            ~/.cargo
            ~/.rustup
            $PWD/target
      - if: ${{ steps.cache-cargo.outputs.cache-hit != 'true' }}
        name: Update rust
        run: rustup update

      - name: Build binary
        run: |
          cargo build --profile release --features all

      - name: Rename binary
        id: rename
        shell: bash
        env:
          BINARY_NAME: ${{ steps.determine-os.outputs.binary_name }}
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            mv target/release/teamspeak-management-tools.exe target/release/$BINARY_NAME
          else
            mv target/release/teamspeak-management-tools target/release/$BINARY_NAME
          fi
          echo "bin=target/release/$BINARY_NAME" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ steps.determine-os.outputs.binary_name }}
          path: target/release/${{ steps.determine-os.outputs.binary_name }}

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ steps.rename.outputs.bin }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_aarch64:
    name: Cross build
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full

    steps:
      - uses: actions/checkout@v4
      #- name: Environment
      #  run: |
      #    git submodule update --init --recursive
      #    sudo apt install libssl-dev
      - name: Cache Cargo packages
        id: cache-cargo
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-cargo-cross
          path: |
            ~/.cargo
            ~/.rustup
            $PWD/target
      - if: ${{ steps.cache-cargo.outputs.cache-hit != 'true' }}
        name: Update rust
        run: rustup update && rustup target install aarch64-unknown-linux-musl
      - name: Install cross
        run: cargo install cross
      - name: Build binary
        run: |
          cross build --target aarch64-unknown-linux-musl --profile release --features all
      - run: mv target/aarch64-unknown-linux-musl/release/teamspeak-management-tools target/aarch64-unknown-linux-musl/release/teamspeak-management-tools_linux_aarch64
      - uses: actions/upload-artifact@v4.3.3
        with:
          name: teamspeak-management-tools_linux_aarch64
          path: target/aarch64-unknown-linux-musl/release/teamspeak-management-tools_linux_aarch64
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/aarch64-unknown-linux-musl/release/teamspeak-management-tools_linux_aarch64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
